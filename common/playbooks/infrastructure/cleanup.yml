---

# Cleanup old configurations and software

- hosts: control
  become: no
  vars_files:
    - "{{ play_dir }}/vars/common.yml"
    - "{{ play_dir }}/vars/versions.yml"
    - "{{ play_dir }}/vars/infrastructure/endpoints.yml"

  roles:

    - role: remove-apps
      old_apps:
        - /ldsm
        - /federationdb
      tags: ['cleanup', 'infra', 'infrastructure']

- hosts: managed
  become: yes
  vars_files:
    - "{{ play_dir }}/vars/common.yml"
    - "{{ play_dir }}/vars/versions.yml"
    - "{{ play_dir }}/vars/infrastructure/endpoints.yml"

  tasks:
    - name: Remove old packages
      apt: pkg="{{ item }}" state=absent
      with_items:
        - chronos # migrated to Docker
      tags: ['cleanup', 'infra', 'infrastructure']

    - name: Remove old files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /srv/docker/postgres
        - /opt/analytics-database
        - /srv/docker/analyticsdb
        - /etc/apt/sources.list.d/docker.list
        - /etc/chronos
      tags: ['cleanup', 'infra', 'infrastructure']

    - name: Install docker-py to control Docker from Ansible
      apt: pkg=python-docker state=present
      when: ansible_lsb.id == 'Ubuntu' and ansible_lsb.major_release|int >= 15
      tags: ['docker', 'cleanup', 'infra', 'infrastructure']

    - name: Remove old Docker images
      docker_image:
        name: "{{ item }}"
        state: absent
      with_items:
        - postgres:9.3.9
        - postgres:9.4.4
        - postgres:9.4.5
      when: ansible_lsb.id == 'Ubuntu' and ansible_lsb.major_release|int >= 15
      tags: ['docker', 'cleanup', 'infra', 'infrastructure']
