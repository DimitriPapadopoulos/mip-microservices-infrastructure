---

airflow_python_libraries_path: '/usr/lib/python3/dist/packages/:/usr/local/lib/python3.5/dist-packages/'

# We assume that MRI database is deployed under the same Postgres instance as airflow database
# Identifier must be under /data-factory/airflow namespace to be able to use dependencies on scheduler and webserver
airflow_db_marathon_id: '/data-factory/airflow/airflow-db'

airflow_scheduler_marathon_id: '/data-factory/airflow/scheduler'
airflow_scheduler_marathon_dependencies:
  - "{{ airflow_db_marathon_id }}"

airflow_webserver_marathon_id: '/data-factory/airflow/webserver'
airflow_webserver_marathon_dependencies:
  - "{{ airflow_db_marathon_id }}"
  - "{{ airflow_scheduler_marathon_id }}"

# TODO airflow_executor: 'MesosExecutor'

airflow_db_deb_packages:
  - python3-pip
  - python3-psycopg2
  - python3-numpy
  - curl

mri_db_deb_packages:
  - python3-pip
  - python3-psycopg2
  - curl

airflow_deb_packages:
  - netcat
  - curl
  - python3-pip
  - python3-dev
  - libffi-dev
  - build-essential
  - locales
  - libffi-dev
  - libssl-dev

airflow_pip_packages:
  - "pytz==2015.7"
  - pyOpenSSL
  - ndg-httpsclient
  - pyasn1
  - pydicom
  - alembic
  - "slackclient==1.0.4"
  - "git+https://github.com/HBPSp8Repo/airflow-imaging-plugins.git@master#egg=airflow_imaging_plugins"

airflow_plugins:
  - name: mesos
    required_debs: []
    required_pips: []
  - name: postgresql
    required_debs:
      - postgresql-client
      - python3-psycopg2
    required_pips: []
  - name: crypto
    required_debs:
      - libssl-dev
    required_pips:
      - cryptography
  - name: ldap
    required_debs:
      - libkrb5-dev
      - libsasl2-dev
    required_pips: []

# List of slot pools to create in Airflow (similar to using the Pools menu in Airflow webserver)
airflow_slot_pools:
  - name: 'image_preprocessing'
    slots: '{{ ansible_processor_vcpus - 1 }}'
    description: 'Number of parallel Matlab instances that can process images'
  - name: 'io_intensive'
    slots: 2
    description: 'Number of concurrent IO intensive processes that can run in parallel'
  - name: 'remote_file_copy'
    slots: 2
    description: 'Number of concurrent file copy operations over the network'

airflow_scripts:
  - url: https://github.com/HBPSp8Repo/mri-preprocessing-pipeline.git
    version: '{{ mri_preprocessing_pipeline_version }}'
    verify_commit: true
    dest: '{{ airflow_scripts_root }}/mri-preprocessing-pipeline'
  - url: https://github.com/HBPSp8Repo/airflow-mri-preprocessing-dags.git
    version: '{{ airflow_mri_preprocessing_dags_version }}'
    # TODO set to true
    verify_commit: false
    dest: '{{ airflow_scripts_root }}/airflow-mri-preprocessing-dags'

# Configuration for MRI preprocessing pipeline running in Airflow
#mri_max_active_runs
#mri_min_free_space_local_folder
#mri_preprocessing_data_folder: "/mnt/filearc/CRN/LREN/IRMMP16/prisma"
#mri_dicom_local_folder: "/data/incoming"
#mri_nifti_local_folder: "/data/Nifti_Data_MPMs"
#mri_nifti_server_folder: "/mnt/filerc/LREN/SHARE/AIR_VBQ_Output_All/DataNifti_All"
#mri_neuro_morphometric_atlas_local_folder: "/data/Neuromorphics_Atlasing"
#mri_neuro_morphometric_atlas_server_folder: "/mnt/filerc/LREN/SHARE/AIR_Neuromorphics_Atlasing"
#mri_mpm_maps_local_folder: "/data/MPMs_All"
#mri_mpm_maps_server_folder: "/mnt/filerc/LREN/SHARE/AIR_VBQ_Output_All"
#mri_pipelines_path: "{{ airflow_scripts_root }}/mri-preprocessing-pipeline/Pipelines"
#mri_protocols_file: "{{ airflow_scripts_root }}/mri-preprocessing-pipeline/Protocols_definition.txt"
#mri_slack_channel
#mri_slack_channel_user

#spm_dir: /opt/spm12

airflow_extra_settings:
  - section: mesos_env
    parameters:
      PYTHONPATH: '{{ airflow_python_libraries_path }}'
  - section: spm
    parameters:
      spm_dir: '{{ spm_dir }}'
  - section: mri
    parameters:
      sql_alchemy_conn: '{{ mri_db_sql_alchemy_conn }}'
      preprocessing_data_folder: '{{ mri_preprocessing_data_folder }}'
      max_active_runs: '{{ mri_max_active_runs }}'
      min_free_space_local_folder: '{{ mri_min_free_space_local_folder }}'
      dicom_local_folder: "{{ mri_dicom_local_folder }}"
      nifti_local_folder: '{{ mri_nifti_local_folder }}'
      nifti_server_folder: '{{ mri_nifti_server_folder }}'
      neuro_morphometric_atlas_local_folder: '{{ mri_neuro_morphometric_atlas_local_folder }}'
      neuro_morphometric_atlas_server_folder: '{{ mri_neuro_morphometric_atlas_server_folder }}'
      mpm_maps_local_folder: '{{ mri_mpm_maps_local_folder }}'
      mpm_maps_server_folder: '{{ mri_mpm_maps_server_folder }}'
      pipelines_path: '{{ mri_pipelines_path }}'
      protocols_file: '{{ mri_protocols_file }}'
      slack_token: '{{ mri_slack_token | default(slack_token) }}'
      slack_channel: '{{ mri_slack_channel }}'
      slack_channel_user: '{{ mri_slack_channel_user }}'

airflow_work_dirs:
  - '{{ mri_dicom_local_folder }}'
  - '{{ mri_nifti_local_folder }}'
  - '{{ mri_mpm_maps_local_folder }}'
