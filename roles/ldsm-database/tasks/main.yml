---

- include: marathon.yml
  when: ldsm_db_deploy

# run this task on the database host
- name: Wait for the LDSM database to be up and running
  wait_for: >
    port="{{ ldsm_db_port }}"
    delay=2

- name: Drop database with name "ldsm"
  postgresql_db:
    name: "{{ ldsm_db_name }}"
    port: "{{ ldsm_db_port }}"
    login_host: "{{ ldsm_db_host }}"
    login_user: "{{ ldsm_db_admin_user }}"
    login_password: "{{ ldsm_db_admin_password }}"
    state: absent
  delegate_to: "{{ groups['control'][0] }}"
  when: (not ldsm_db_deploy) and ldsm_db_cleanup

- name: Create a new database with name "ldsm"
  postgresql_db:
    name: "{{ ldsm_db_name }}"
    port: "{{ ldsm_db_port }}"
    login_host: "{{ ldsm_db_host }}"
    login_user: "{{ ldsm_db_admin_user }}"
    login_password: "{{ ldsm_db_admin_password }}"
    state: present
  delegate_to: "{{ groups['control'][0] }}"

- name: Create ldsm user
  postgresql_user:
    login_host: "{{ ldsm_db_host }}"
    login_user: "{{ ldsm_db_admin_user }}"
    login_password: "{{ ldsm_db_admin_password }}"
    db: "{{ ldsm_db_name }}"
    port: "{{ ldsm_db_port }}"
    name: "{{ ldsm_db_user }}"
    password: "{{ ldsm_db_password }}"
    role_attr_flags: "SUPERUSER"
  delegate_to: "{{ groups['control'][0] }}"

- name: Create setup dir
  file:
    state: directory
    path: "{{ldsm_db_setup_dir}}"
  delegate_to: "{{ groups['control'][0] }}"

- name: Copy sql creation scripts
  copy:
    src: "{{ item }}"
    dest: "{{ldsm_db_setup_dir}}/{{ item | basename }}"
  with_fileglob:
   - "{{ ldsm_db_setup_scripts_dir }}/sql/*"
  delegate_to: "{{ groups['control'][0] }}"
  when: not in_vagrant

- name: Copy sql creation scripts (Vagrant)
  copy:
    src: "{{ item }}"
    dest: "{{ldsm_db_setup_dir}}/{{ item | basename }}"
  with_fileglob:
   - "{{ ldsm_db_setup_scripts_dir }}/sql/*"
  when: in_vagrant

- name: Run Flyway migration
  docker_container:
    name: migrate_ldsm
    image: "lren/flyway:{{ flyway_version }}"
    command: migrate
    detach: no
    network_mode: host
    interactive: yes
    # cleanup: yes
    volumes:
      - '{{ ldsm_db_setup_dir }}:/flyway/sql'
    env:
      FLYWAY_DBMS: postgresql
      FLYWAY_HOST: '{{ ldsm_db_host }}'
      FLYWAY_PORT: '{{ ldsm_db_port }}'
      FLYWAY_DATABASE_NAME: '{{ ldsm_db_name }}'
      FLYWAY_SCHEMAS: "public"
      FLYWAY_USER: '{{ ldsm_db_admin_user }}'
      FLYWAY_PASSWORD: '{{ ldsm_db_admin_password }}'
      FLYWAY_DRIVER: 'org.postgresql.Driver'
  delegate_to: "{{ groups['control'][0] }}"
