---

# Deploy meta-db as an independent database. If false, then we assume that there is
# a database already running and we add to it a new 'meta' schema
meta_db_deploy: no

# Used when meta_db_deploy is true
meta_db_marathon_id: /reference/meta-db

# Pin the database to a particular host as it needs to store its files in a known place. The hostname should be the name known by Marathon / Mesos
meta_db_marathon_host: '{{ ansible_fqdn }}'

# The user running the Docker container for Postgres, default to '999' (postgres user in the Postgres docker container)
# TODO: use user remapping when this functionality will be available per run (not possible today with Docker 1.12)
meta_db_docker_user: '999'

meta_db_image: 'postgres'
postgres_version: "9.5.4"
meta_db_version: "{{ postgres_version }}"
postgres_is_ready: "/usr/local/bin/pg_isready"
meta_db_is_ready: "{{ postgres_is_ready }}"

meta_db_cpus: 0.5
meta_db_mem: 128.0

# Port exposed by Marathon, must be in the range [4000, 5000[, [31000,32000[
meta_db_port: 31433
meta_db_host: '{{ meta_db_marathon_host }}'
meta_db_name: meta
meta_db_admin_user: postgres
# TO FILL - meta_db_admin_password:
meta_db_user: meta
# TO FILL - meta_db_password:

# Hint in Marathon listing all the databases running in this Postgres server,
# used when meta_db_deploy is true
meta_db_databases: "{{ meta_db_name }}"

meta_db_data_dir: /srv/docker/meta-db/data

meta_db_volumes:
  - containerPath: "/var/lib/postgresql/data"
    hostPath: "{{ meta_db_data_dir }}"
    mode: RW

meta_db_env:
  POSTGRES_USER: "{{ meta_db_admin_user }}"
  POSTGRES_PASSWORD: "{{ meta_db_admin_password }}"

# Force cleanup of the Meta DB. Please never use that in production!
meta_db_cleanup: false

# path to lib_role
meta_db_path_to_lib_role: "{{ lib_roles_path|default(playbook_dir + '/roles') }}"

# URL to marathon master internal to the current cluster. You need to ensure that Ansible can reach that URL.
internal_marathon_url: http://localhost:5080

flyway_version: "4.0.3"

meta_db_fill: yes
meta_db_local_project_dir: /src/meta-db
meta_db_setup_dir: /opt/meta-database/migration
