---

- name: Wait for Marathon
  include: ../../marathon-app/tasks/wait-for-marathon.yml
  vars:
    uri: "{{ internal_marathon_url }}"

- name: Remove old CBrain portal using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ cbrain_portal_marathon_id }}"
    state: "absent"
    waitTimeout: 600
  async: 600
  poll: 1

- name: Launch CBrain portal using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ cbrain_portal_marathon_id }}"
    state: "present"
    docker_image: "{{ cbrain_portal_image }}:{{ cbrain_portal_version }}"
    docker_force_pull_image: true
    docker_network: BRIDGE
    docker_port_mappings:
      - hostPort: '{{ cbrain_portal_port }}'
        containerPort: 3000
        name: 'http'
        protocol: 'tcp'
    container_volumes:
      - containerPath: "/home/cbrain/cbrain_data_cache"
        hostPath: "{{ cbrain_portal_data_cache_dir }}"
        mode: RW
      - containerPath: "/home/cbrain/.ssh"
        hostPath: "{{ cbrain_portal_ssh_dir }}"
        mode: RW
      - containerPath: "/home/cbrain/plugins"
        hostPath: "{{ cbrain_portal_plugins_dir }}"
        mode: RW
    env:
      MODE: "{{ cbrain_portal_mode }}"
      USERID: "{{ cbrain_portal_userid }}"
      GROUPID: "{{ cbrain_portal_groupid }}"
      MYSQL_HOST: "{{ cbrain_db_marathon_host }}"
      MYSQL_PORT: "{{ cbrain_db_port }}"
      MYSQL_USER: "{{ cbrain_db_user }}"
      MYSQL_PASSWORD: "{{ cbrain_db_password }}"
    instances: 1
    cpus: 0.2
    mem: '{{ cbrain_portal_mem }}'
    require_ports: true
    constraints: [["hostname", "CLUSTER", "{{ cbrain_portal_marathon_host }}"]]
    dependencies: []
    executor: ""
    wait_timeout: 600
    health_checks: [] #TODO
  async: 600
  poll: 1
