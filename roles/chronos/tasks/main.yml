---

- fail:
    msg: "Bad configuration for chronos_zk_hosts, found localhost"
  when: "'localhost' in chronos_zk_hosts"

- name: Wait for Marathon
  include: ../../marathon-app/tasks/wait-for-marathon.yml
  vars:
    uri: "{{ internal_marathon_url }}"

- name: Delete old Chronos app using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ chronos_marathon_id }}"
    state: "absent"
    wait_timeout: 600
  async: 600
  poll: 1
  delegate_to: "{{ groups['control'][0] }}"

- name: Launch Chronos using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ chronos_marathon_id }}"
    state: "present"
    cmd: "{{ chronos_command }}"
    docker_image: "{{ chronos_docker_image }}"
    docker_force_pull_image: true
    docker_network: BRIDGE
    docker_port_mappings:
      - hostPort: "{{ chronos_port }}"
        containerPort: 4400
        protocol: 'tcp'
        name: 'http'
      #- hostPort: "{{ chronos_libprocess_port }}"
      #  containerPort: 8081
      #  name: 'libprocess'
    docker_parameters: '{{ chronos_docker_parameters }}'
    container_volumes: []
    env:
      PORT0: 4400
      PORT1: 8081
    instances: 1
    cpus: '{{ chronos_cpus }}'
    mem: '{{ chronos_mem }}'
    ports: []
    require_ports: false
    constraints: [["hostname", "CLUSTER", "{{ chronos_marathon_host | trim }}"]]
    dependencies: []
    executor: ""
    wait_timeout: 600
    health_checks:
      - protocol: "{% if marathon_version | version_compare('1.4', '>=') %}MESOS_HTTP{% else %}HTTP{% endif %}"
        portIndex: 0
        path: "/"
        gracePeriodSeconds: 300
        intervalSeconds: 60
        timeoutSeconds: 20
        maxConsecutiveFailures: 2
    upgrade_strategy:
      minimumHealthCapacity: 0
      maximumOverCapacity: 0
  async: 600
  poll: 1
  delegate_to: "{{ groups['control'][0] }}"
