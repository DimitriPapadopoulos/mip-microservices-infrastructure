---

- include: marathon.yml
  when: data_catalog_db_deploy

- name: Install Python psycopg2 module for Postgres (required by postgresql_db task), pip and curl
  apt: name={{ item }} state=present
  with_items: '{{ data_catalog_db_deb_packages }}'
  when: ansible_os_family == 'Debian'
  delegate_to: "{{ groups['control'][0] }}"
  become: True

# See https://github.com/anarcher/ansible-docker-registry/issues/1
- name: Make sure pip upgraded
  command: easy_install -U pip
  when: ansible_os_family == 'Debian'
  delegate_to: "{{ groups['control'][0] }}"
  become: True

- name: Install Python module for Docker (required by docker_container task)
  pip: name=docker-py state=present
  delegate_to: "{{ groups['control'][0] }}"

# run this task on the database host
- name: Wait for the Data Catalog database to be up and running
  wait_for: >
    port="{{ data_catalog_db_port }}"
    delay=2

- name: Drop database with name "data_catalog"
  postgresql_db:
    name: "{{ data_catalog_db_name }}"
    port: "{{ data_catalog_db_port }}"
    login_host: "{{ data_catalog_db_host }}"
    login_user: "{{ data_catalog_db_admin_user }}"
    login_password: "{{ data_catalog_db_admin_password }}"
    state: absent
  delegate_to: "{{ groups['control'][0] }}"
  when: (not data_catalog_db_deploy) and data_catalog_db_cleanup

- name: Create a new database with name "data_catalog"
  postgresql_db:
    name: "{{ data_catalog_db_name }}"
    port: "{{ data_catalog_db_port }}"
    login_host: "{{ data_catalog_db_host }}"
    login_user: "{{ data_catalog_db_admin_user }}"
    login_password: "{{ data_catalog_db_admin_password }}"
    state: present
  delegate_to: "{{ groups['control'][0] }}"

- name: Create data_catalog user
  postgresql_user:
    login_host: "{{ data_catalog_db_host }}"
    login_user: "{{ data_catalog_db_admin_user }}"
    login_password: "{{ data_catalog_db_admin_password }}"
    db: "{{ data_catalog_db_name }}"
    port: "{{ data_catalog_db_port }}"
    name: "{{ data_catalog_db_user }}"
    password: "{{ data_catalog_db_password }}"
    role_attr_flags: "SUPERUSER"
  delegate_to: "{{ groups['control'][0] }}"

- name: Create group for Airflow
  group:
    name: '{{ airflow_group }}'
    state: present

- name: Create user for Airflow
  user:
    name: '{{ airflow_user }}'
    group: '{{ airflow_group }}'
    home: '{{ airflow_home }}'

- name: Create airflow home
  file:
    path: '{{ airflow_home}}'
    state: directory
    owner: '{{ airflow_user }}'

- name: Install pip
  apt:
    name: 'python-pip'
    state: present

- name: Install required Python packages
  pip:
    name: '{{ item }}'
    state: present
  with_items:
    - "SQLAlchemy==1.0.13"
    - "pydicom==0.9.9"
    - "alembic==0.8.6"

- name: Get a copy of the data-catalog-db Alembic project
  git:
    repo: '{{ data_catalog_db_project_repo }}'
    version: '{{ data_catalog_db_project_version }}'
    dest: '{{ data_catalog_db_project_dir }}'

- name: Setup configuration for alembic database upgrade
  template:
    src: alembic.ini.j2
    dest: '{{ data_catalog_db_project_dir }}/alembic.ini'
    owner: '{{ airflow_user }}'

- name: Launch Alembic to upgrade the Data Catalog database
  command: alembic upgrade head
  args:
    chdir: '{{ data_catalog_db_project_dir }}'
