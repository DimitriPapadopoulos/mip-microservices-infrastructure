---

- include: marathon.yml
  when: airflow_db_deploy

- name: Install Python psycopg2 module for Postgres (required by postgresql_db task), pip and curl
  apt: name={{ item }} state=present
  with_items: '{{ airflow_db_deb_packages }}'
  when: ansible_os_family == 'Debian'
  delegate_to: "{{ groups['control'][0] }}"
  become: True

- name: Install Python psycopg2 module for Postgres (required by postgresql_db task), pip and curl
  yum: name={{ item }} state=present
  with_items: '{{ airflow_db_yum_packages }}'
  when: ansible_os_family == 'RedHat'
  delegate_to: "{{ groups['control'][0] }}"
  become: True

# run this task on the database host
- name: Wait for the database to be up and running
  wait_for: >
    port="{{ airflow_db_port }}"
    delay=2

- name: Drop database with name "data_catalog"
  postgresql_db:
    name: "{{ data_catalog_db_name }}"
    port: "{{ data_catalog_db_port }}"
    login_host: "{{ data_catalog_db_host }}"
    login_user: "{{ data_catalog_db_admin_user }}"
    login_password: "{{ data_catalog_db_admin_password }}"
    state: absent
  delegate_to: "{{ groups['control'][0] }}"
  when: (not data_catalog_db_deploy) and data_catalog_db_cleanup

- name: Create a new database with name "airflow"
  postgresql_db:
    name: "{{ airflow_db_name }}"
    port: "{{ airflow_db_port }}"
    login_host: "{{ airflow_db_host }}"
    login_user: "{{ airflow_db_admin_user }}"
    login_password: "{{ airflow_db_admin_password }}"
    state: present
  delegate_to: "{{ groups['control'][0] }}"

- name: Create airflow user
  postgresql_user:
    login_host: "{{ airflow_db_host }}"
    login_user: "{{ airflow_db_admin_user }}"
    login_password: "{{ airflow_db_admin_password }}"
    db: "{{ airflow_db_name }}"
    port: "{{ airflow_db_port }}"
    name: "{{ airflow_db_user }}"
    password: "{{ airflow_db_password }}"
    role_attr_flags: "SUPERUSER"
  delegate_to: "{{ groups['control'][0] }}"
